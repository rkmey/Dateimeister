#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Feb 22, 2024 07:40:06 PM CET  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_location = os.path.dirname(__file__)

import Dateimeister_support

_bgcolor = '#d9d9d9'
_fgcolor = 'black'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran: return        
    try: Dateimeister_support.root.tk.call('source',
                os.path.join(_location, 'themes', 'alt.tcl'))
    except: pass
    style = ttk.Style()
    style.theme_use('alt')
    style.configure('.', font = "TkDefaultFont")
    _style_code_ran = 1

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("1446x921+31+20")
        top.minsize(120, 100)
        top.maxsize(4000, 4000)
        top.resizable(1,  1)
        top.title("Dateimeister")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.cb1_val = tk.IntVar()
        self.cb_prefix_var = tk.IntVar()
        self.cb_addrelpath_var = tk.IntVar()
        self.cb_newer_var = tk.IntVar()
        self.cbnum_var = tk.IntVar()
        self.combobox_indir = tk.StringVar()
        self.combobox_outdir = tk.StringVar()

        self.Button1 = tk.Button(self.top)
        self.Button1.place(relx=0.29, rely=0.022, height=34, width=107)
        self.Button1.configure(activebackground="beige")
        self.Button1.configure(activeforeground="black")
        self.Button1.configure(background="#d9d9d9")
        #self.Button1.configure(command=Dateimeister_support.Press_indir)
        self.Button1.configure(compound='left')
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(font="-family {Segoe UI} -size 9")
        self.Button1.configure(foreground="black")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''from file system''')
        self.Button1_tooltip = \
        ToolTip(self.Button1, '''opens file dialog''')

        self.Button2 = tk.Button(self.top)
        self.Button2.place(relx=0.035, rely=0.347, height=34, width=87)
        self.Button2.configure(activebackground="beige")
        self.Button2.configure(activeforeground="black")
        self.Button2.configure(background="#d9d9d9")
        #self.Button2.configure(command=Dateimeister_support.B_camera_press)
        self.Button2.configure(compound='left')
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(font="-family {Segoe UI} -size 9")
        self.Button2.configure(foreground="black")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Select Camera''')
        self.Button2_tooltip = \
        ToolTip(self.Button2, '''Select Camera''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Button_outdir = tk.Button(self.top)
        self.Button_outdir.place(relx=0.636, rely=0.022, height=34, width=107)
        self.Button_outdir.configure(activebackground="beige")
        self.Button_outdir.configure(activeforeground="black")
        self.Button_outdir.configure(background="#d9d9d9")
        #self.Button_outdir.configure(command=Dateimeister_support.Press_outdir)
        self.Button_outdir.configure(compound='left')
        self.Button_outdir.configure(disabledforeground="#a3a3a3")
        self.Button_outdir.configure(font="-family {Segoe UI} -size 9")
        self.Button_outdir.configure(foreground="black")
        self.Button_outdir.configure(highlightbackground="#d9d9d9")
        self.Button_outdir.configure(highlightcolor="black")
        self.Button_outdir.configure(pady="0")
        self.Button_outdir.configure(text='''from file system''')
        self.Button_outdir_tooltip = \
        ToolTip(self.Button_outdir, '''opens file dialog''')

        self.Entry_camera = tk.Entry(self.top)
        self.Entry_camera.place(relx=0.035, rely=0.402, height=40
                , relwidth=0.155)
        self.Entry_camera.configure(background="white")
        self.Entry_camera.configure(disabledforeground="#a3a3a3")
        self.Entry_camera.configure(font="-family {Courier New} -size 10")
        self.Entry_camera.configure(foreground="black")
        self.Entry_camera.configure(highlightbackground="#d9d9d9")
        self.Entry_camera.configure(highlightcolor="black")
        self.Entry_camera.configure(insertbackground="black")
        self.Entry_camera.configure(selectbackground="#c4c4c4")
        self.Entry_camera.configure(selectforeground="black")

        self.Button_call = tk.Button(self.top)
        self.Button_call.place(relx=0.035, rely=0.467, height=34, width=147)
        self.Button_call.configure(activebackground="beige")
        self.Button_call.configure(activeforeground="black")
        self.Button_call.configure(background="#d9d9d9")
        #self.Button_call.configure(command=Dateimeister_support.Press_generate)
        self.Button_call.configure(compound='left')
        self.Button_call.configure(disabledforeground="#a3a3a3")
        self.Button_call.configure(font="-family {Segoe UI} -size 9")
        self.Button_call.configure(foreground="black")
        self.Button_call.configure(highlightbackground="#d9d9d9")
        self.Button_call.configure(highlightcolor="black")
        self.Button_call.configure(pady="0")
        self.Button_call.configure(text='''Generate''')
        self.Button_call_tooltip = \
        ToolTip(self.Button_call, '''Call Dateimeister''')

        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.616, rely=0.673, height=37, width=506)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Arial} -size 8")
        self.Label1.configure(foreground="black")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Label''')

        self.Listbox_gen = tk.Listbox(self.top)
        self.Listbox_gen.place(relx=0.028, rely=0.521, relheight=0.143
                , relwidth=0.118)
        self.Listbox_gen.configure(background="white")
        self.Listbox_gen.configure(disabledforeground="#a3a3a3")
        self.Listbox_gen.configure(font="TkFixedFont")
        self.Listbox_gen.configure(foreground="black")
        self.Listbox_gen.configure(highlightbackground="#d9d9d9")
        self.Listbox_gen.configure(highlightcolor="black")
        self.Listbox_gen.configure(selectbackground="#c4c4c4")
        self.Listbox_gen.configure(selectforeground="black")
        self.Listbox_gen.configure(selectmode='single')
        self.Listbox_gen_tooltip = \
        ToolTip(self.Listbox_gen, '''generated files''')

        self.Checkbutton1 = tk.Checkbutton(self.top)
        self.Checkbutton1.place(relx=0.041, rely=0.043, relheight=0.027
                , relwidth=0.076)
        self.Checkbutton1.configure(activebackground="beige")
        self.Checkbutton1.configure(activeforeground="black")
        self.Checkbutton1.configure(anchor='w')
        self.Checkbutton1.configure(background="#d9d9d9")
        self.Checkbutton1.configure(compound='left')
        self.Checkbutton1.configure(disabledforeground="#a3a3a3")
        self.Checkbutton1.configure(font="-family {Segoe UI} -size 9")
        self.Checkbutton1.configure(foreground="black")
        self.Checkbutton1.configure(highlightbackground="#d9d9d9")
        self.Checkbutton1.configure(highlightcolor="black")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(selectcolor="#d9d9d9")
        self.Checkbutton1.configure(text='''recursive''')
        self.Checkbutton1.configure(variable=self.cb1_val)
        self.Checkbutton1_tooltip = \
        ToolTip(self.Checkbutton1, '''process  subdirectories''')

        self.Button_exclude = tk.Button(self.top)
        self.Button_exclude.place(relx=0.159, rely=0.684, height=24, width=67)
        self.Button_exclude.configure(activebackground="beige")
        self.Button_exclude.configure(activeforeground="black")
        self.Button_exclude.configure(background="#d9d9d9")
        #self.Button_exclude.configure(command=Dateimeister_support.Button_exclude_all)
        self.Button_exclude.configure(compound='left')
        self.Button_exclude.configure(disabledforeground="#a3a3a3")
        self.Button_exclude.configure(font="-family {Segoe UI} -size 9")
        self.Button_exclude.configure(foreground="black")
        self.Button_exclude.configure(highlightbackground="#d9d9d9")
        self.Button_exclude.configure(highlightcolor="black")
        self.Button_exclude.configure(pady="0")
        self.Button_exclude.configure(text='''Exclude all''')
        self.Button_exclude_tooltip = \
        ToolTip(self.Button_exclude, '''Exclude all''')

        self.Button_include = tk.Button(self.top)
        self.Button_include.place(relx=0.222, rely=0.684, height=24, width=67)
        self.Button_include.configure(activebackground="beige")
        self.Button_include.configure(activeforeground="black")
        self.Button_include.configure(background="#d9d9d9")
        #self.Button_include.configure(command=Dateimeister_support.Button_include_all)
        self.Button_include.configure(compound='left')
        self.Button_include.configure(disabledforeground="#a3a3a3")
        self.Button_include.configure(font="-family {Segoe UI} -size 9")
        self.Button_include.configure(foreground="black")
        self.Button_include.configure(highlightbackground="#d9d9d9")
        self.Button_include.configure(highlightcolor="black")
        self.Button_include.configure(pady="0")
        self.Button_include.configure(text='''Include all''')
        self.Button_include_tooltip = \
        ToolTip(self.Button_include, '''Include all''')

        self.Button_be = tk.Button(self.top)
        self.Button_be.place(relx=0.152, rely=0.467, height=34, width=137)
        self.Button_be.configure(activebackground="beige")
        self.Button_be.configure(activeforeground="black")
        self.Button_be.configure(background="#d9d9d9")
        self.Button_be.configure(compound='left')
        self.Button_be.configure(disabledforeground="#a3a3a3")
        self.Button_be.configure(font="-family {Segoe UI} -size 9")
        self.Button_be.configure(foreground="black")
        self.Button_be.configure(highlightbackground="#d9d9d9")
        self.Button_be.configure(highlightcolor="black")
        self.Button_be.configure(pady="0")
        self.Button_be.configure(text='''Browse / edit output''')

        self.Button_undo = tk.Button(self.top)
        self.Button_undo.place(relx=0.028, rely=0.684, height=24, width=37)
        self.Button_undo.configure(activebackground="beige")
        self.Button_undo.configure(activeforeground="black")
        self.Button_undo.configure(background="#d9d9d9")
        #self.Button_undo.configure(command=Dateimeister_support.button_undo)
        self.Button_undo.configure(compound='left')
        self.Button_undo.configure(disabledforeground="#a3a3a3")
        self.Button_undo.configure(font="-family {Segoe UI} -size 9")
        self.Button_undo.configure(foreground="black")
        self.Button_undo.configure(highlightbackground="#d9d9d9")
        self.Button_undo.configure(highlightcolor="black")
        self.Button_undo.configure(pady="0")
        self.Button_undo.configure(text='''Undo''')

        self.Button_redo = tk.Button(self.top)
        self.Button_redo.place(relx=0.062, rely=0.684, height=24, width=37)
        self.Button_redo.configure(activebackground="beige")
        self.Button_redo.configure(activeforeground="black")
        self.Button_redo.configure(background="#d9d9d9")
        #self.Button_redo.configure(command=Dateimeister_support.button_redo)
        self.Button_redo.configure(compound='left')
        self.Button_redo.configure(disabledforeground="#a3a3a3")
        self.Button_redo.configure(font="-family {Segoe UI} -size 9")
        self.Button_redo.configure(foreground="black")
        self.Button_redo.configure(highlightbackground="#d9d9d9")
        self.Button_redo.configure(highlightcolor="black")
        self.Button_redo.configure(pady="0")
        self.Button_redo.configure(text='''Redo''')

        self.Checkbutton_use_camera_name = tk.Checkbutton(self.top)
        self.Checkbutton_use_camera_name.place(relx=0.104, rely=0.043
                , relheight=0.026, relwidth=0.091)
        self.Checkbutton_use_camera_name.configure(activebackground="beige")
        self.Checkbutton_use_camera_name.configure(activeforeground="black")
        self.Checkbutton_use_camera_name.configure(anchor='w')
        self.Checkbutton_use_camera_name.configure(background="#d9d9d9")
        self.Checkbutton_use_camera_name.configure(compound='left')
        self.Checkbutton_use_camera_name.configure(disabledforeground="#a3a3a3")
        self.Checkbutton_use_camera_name.configure(font="-family {Segoe UI} -size 9")
        self.Checkbutton_use_camera_name.configure(foreground="black")
        self.Checkbutton_use_camera_name.configure(highlightbackground="#d9d9d9")
        self.Checkbutton_use_camera_name.configure(highlightcolor="black")
        self.Checkbutton_use_camera_name.configure(justify='left')
        self.Checkbutton_use_camera_name.configure(selectcolor="#d9d9d9")
        self.Checkbutton_use_camera_name.configure(text='''use camera prefix''')
        self.Checkbutton_use_camera_name.configure(variable=self.cb_prefix_var)
        self.Checkbutton_use_camera_name_tooltip = \
        ToolTip(self.Checkbutton_use_camera_name, '''use camera as prefix''')

        self.Checkbutton_addrelpath = tk.Checkbutton(self.top)
        self.Checkbutton_addrelpath.place(relx=0.041, rely=0.098, relheight=0.027
                , relwidth=0.084)
        self.Checkbutton_addrelpath.configure(activebackground="beige")
        self.Checkbutton_addrelpath.configure(activeforeground="black")
        self.Checkbutton_addrelpath.configure(anchor='w')
        self.Checkbutton_addrelpath.configure(background="#d9d9d9")
        self.Checkbutton_addrelpath.configure(compound='left')
        self.Checkbutton_addrelpath.configure(disabledforeground="#a3a3a3")
        self.Checkbutton_addrelpath.configure(font="-family {Segoe UI} -size 9")
        self.Checkbutton_addrelpath.configure(foreground="black")
        self.Checkbutton_addrelpath.configure(highlightbackground="#d9d9d9")
        self.Checkbutton_addrelpath.configure(highlightcolor="black")
        self.Checkbutton_addrelpath.configure(justify='left')
        self.Checkbutton_addrelpath.configure(selectcolor="#d9d9d9")
        self.Checkbutton_addrelpath.configure(text='''Addrelpath''')
        self.Checkbutton_addrelpath.configure(variable=self.cb_addrelpath_var)
        self.Checkbutton_addrelpath_tooltip = \
        ToolTip(self.Checkbutton_addrelpath, '''add relative path to target''')

        self.Button_duplicates = tk.Button(self.top)
        self.Button_duplicates.place(relx=0.152, rely=0.532, height=34
                , width=137)
        self.Button_duplicates.configure(activebackground="beige")
        self.Button_duplicates.configure(activeforeground="black")
        self.Button_duplicates.configure(background="#d9d9d9")
        #self.Button_duplicates.configure(command=Dateimeister_support.button_duplicates)
        self.Button_duplicates.configure(compound='left')
        self.Button_duplicates.configure(disabledforeground="#a3a3a3")
        self.Button_duplicates.configure(font="-family {Segoe UI} -size 9")
        self.Button_duplicates.configure(foreground="black")
        self.Button_duplicates.configure(highlightbackground="#d9d9d9")
        self.Button_duplicates.configure(highlightcolor="black")
        self.Button_duplicates.configure(pady="0")
        self.Button_duplicates.configure(text='''Show duplicates''')

        self.Checkbutton_newer = tk.Checkbutton(self.top)
        self.Checkbutton_newer.place(relx=0.104, rely=0.098, relheight=0.027
                , relwidth=0.175)
        self.Checkbutton_newer.configure(activebackground="beige")
        self.Checkbutton_newer.configure(activeforeground="black")
        self.Checkbutton_newer.configure(anchor='w')
        self.Checkbutton_newer.configure(background="#d9d9d9")
        self.Checkbutton_newer.configure(compound='left')
        self.Checkbutton_newer.configure(disabledforeground="#a3a3a3")
        self.Checkbutton_newer.configure(font="-family {Segoe UI} -size 9")
        self.Checkbutton_newer.configure(foreground="black")
        self.Checkbutton_newer.configure(highlightbackground="#d9d9d9")
        self.Checkbutton_newer.configure(highlightcolor="black")
        self.Checkbutton_newer.configure(justify='left')
        self.Checkbutton_newer.configure(selectcolor="#d9d9d9")
        self.Checkbutton_newer.configure(text='''copy file only when newer or not existent''')
        self.Checkbutton_newer.configure(variable=self.cb_newer_var)
        self.Checkbutton_newer_tooltip = \
        ToolTip(self.Checkbutton_newer, '''if checked existing files will ohnly be overridden when they are older than the source file''')

        self.Label_num = tk.Label(self.top)
        self.Label_num.place(relx=0.097, rely=0.684, height=21, width=75)
        self.Label_num.configure(activebackground="#f9f9f9")
        self.Label_num.configure(activeforeground="black")
        self.Label_num.configure(anchor='w')
        self.Label_num.configure(background="#d9d9d9")
        self.Label_num.configure(compound='left')
        self.Label_num.configure(disabledforeground="#a3a3a3")
        self.Label_num.configure(font="-family {Segoe UI} -size 9")
        self.Label_num.configure(foreground="black")
        self.Label_num.configure(highlightbackground="#d9d9d9")
        self.Label_num.configure(highlightcolor="black")
        self.Label_num.configure(text='''Label''')
        self.Label_num_tooltip = \
        ToolTip(self.Label_num, '''Number of images ''')

        self.Button_exec = tk.Button(self.top)
        self.Button_exec.place(relx=0.29, rely=0.684, height=24, width=57)
        self.Button_exec.configure(activebackground="beige")
        self.Button_exec.configure(activeforeground="black")
        self.Button_exec.configure(background="#d9d9d9")
        self.Button_exec.configure(compound='left')
        self.Button_exec.configure(disabledforeground="#a3a3a3")
        self.Button_exec.configure(font="-family {Segoe UI} -size 9")
        self.Button_exec.configure(foreground="black")
        self.Button_exec.configure(highlightbackground="#d9d9d9")
        self.Button_exec.configure(highlightcolor="black")
        self.Button_exec.configure(pady="0")
        self.Button_exec.configure(text='''Exec''')
        self.Button_exec_tooltip = \
        ToolTip(self.Button_exec, '''Execute commands''')

        self.Checkbutton_num = tk.Checkbutton(self.top)
        self.Checkbutton_num.place(relx=0.159, rely=0.651, relheight=0.026
                , relwidth=0.105)
        self.Checkbutton_num.configure(activebackground="beige")
        self.Checkbutton_num.configure(activeforeground="black")
        self.Checkbutton_num.configure(anchor='w')
        self.Checkbutton_num.configure(background="#d9d9d9")
        self.Checkbutton_num.configure(compound='left')
        self.Checkbutton_num.configure(disabledforeground="#a3a3a3")
        self.Checkbutton_num.configure(font="-family {Segoe UI} -size 9")
        self.Checkbutton_num.configure(foreground="black")
        self.Checkbutton_num.configure(highlightbackground="#d9d9d9")
        self.Checkbutton_num.configure(highlightcolor="black")
        self.Checkbutton_num.configure(justify='left')
        self.Checkbutton_num.configure(selectcolor="#d9d9d9")
        self.Checkbutton_num.configure(text='''show image numbers''')
        self.Checkbutton_num.configure(variable=self.cbnum_var)
        self.Checkbutton_num_tooltip = \
        ToolTip(self.Checkbutton_num, '''image numbers in canvas''')

        self.TCombobox_indir = tk.Listbox(self.top)
        self.TCombobox_indir.place(relx=0.29, rely=0.065, relheight=0.131
                , relwidth=0.328)
        self.TCombobox_indir.configure(background="white")
        self.TCombobox_indir.configure(disabledforeground="#a3a3a3")
        self.TCombobox_indir.configure(font="TkFixedFont")
        self.TCombobox_indir.configure(foreground="black")
        self.TCombobox_indir.configure(highlightbackground="#d9d9d9")
        self.TCombobox_indir.configure(highlightcolor="black")
        self.TCombobox_indir.configure(selectbackground="#c4c4c4")
        self.TCombobox_indir.configure(selectforeground="black")
        self.TCombobox_indir.configure(selectmode='single')
        self.TCombobox_indir.configure(listvariable=self.combobox_indir)
        self.TCombobox_indir_tooltip = \
        ToolTip(self.TCombobox_indir, '''recent indirs''')

        self.TCombobox_outdir = tk.Listbox(self.top)
        self.TCombobox_outdir.place(relx=0.636, rely=0.065, relheight=0.131
                , relwidth=0.335)
        self.TCombobox_outdir.configure(background="white")
        self.TCombobox_outdir.configure(disabledforeground="#a3a3a3")
        self.TCombobox_outdir.configure(font="TkFixedFont")
        self.TCombobox_outdir.configure(foreground="black")
        self.TCombobox_outdir.configure(highlightbackground="#d9d9d9")
        self.TCombobox_outdir.configure(highlightcolor="black")
        self.TCombobox_outdir.configure(selectbackground="#c4c4c4")
        self.TCombobox_outdir.configure(selectforeground="black")
        self.TCombobox_outdir.configure(listvariable=self.combobox_outdir)
        self.TCombobox_outdir_tooltip = \
        ToolTip(self.TCombobox_outdir, '''recent outdirs''')

        self.Label_indir = tk.Label(self.top)
        self.Label_indir.place(relx=0.29, rely=0.217, height=21, width=476)
        self.Label_indir.configure(activebackground="#ffffff")
        self.Label_indir.configure(activeforeground="black")
        self.Label_indir.configure(anchor='w')
        self.Label_indir.configure(background="#d9d9d9")
        self.Label_indir.configure(compound='left')
        self.Label_indir.configure(disabledforeground="#a3a3a3")
        self.Label_indir.configure(font="-family {Segoe UI} -size 9")
        self.Label_indir.configure(foreground="black")
        self.Label_indir.configure(highlightbackground="#d9d9d9")
        self.Label_indir.configure(highlightcolor="black")
        self.Label_indir.configure(text='''Label''')

        self.Label_outdir = tk.Label(self.top)
        self.Label_outdir.place(relx=0.636, rely=0.217, height=21, width=484)
        self.Label_outdir.configure(activebackground="#ffffff")
        self.Label_outdir.configure(activeforeground="black")
        self.Label_outdir.configure(anchor='w')
        self.Label_outdir.configure(background="#d9d9d9")
        self.Label_outdir.configure(compound='left')
        self.Label_outdir.configure(disabledforeground="#a3a3a3")
        self.Label_outdir.configure(font="-family {Segoe UI} -size 9")
        self.Label_outdir.configure(foreground="black")
        self.Label_outdir.configure(highlightbackground="#d9d9d9")
        self.Label_outdir.configure(highlightcolor="black")
        self.Label_outdir.configure(text='''Label''')

        self.Button_indir_from_list = tk.Button(self.top)
        self.Button_indir_from_list.place(relx=0.539, rely=0.022, height=34
                , width=107)
        self.Button_indir_from_list.configure(activebackground="beige")
        self.Button_indir_from_list.configure(activeforeground="black")
        self.Button_indir_from_list.configure(background="#d9d9d9")
        self.Button_indir_from_list.configure(compound='left')
        self.Button_indir_from_list.configure(disabledforeground="#a3a3a3")
        self.Button_indir_from_list.configure(font="-family {Segoe UI} -size 9")
        self.Button_indir_from_list.configure(foreground="black")
        self.Button_indir_from_list.configure(highlightbackground="#d9d9d9")
        self.Button_indir_from_list.configure(highlightcolor="black")
        self.Button_indir_from_list.configure(pady="0")
        self.Button_indir_from_list.configure(text='''from list''')
        self.Button_indir_from_list_tooltip = \
        ToolTip(self.Button_indir_from_list, '''select dir from list''')

        self.Button_outdir_from_list = tk.Button(self.top)
        self.Button_outdir_from_list.place(relx=0.899, rely=0.022, height=34
                , width=97)
        self.Button_outdir_from_list.configure(activebackground="beige")
        self.Button_outdir_from_list.configure(activeforeground="black")
        self.Button_outdir_from_list.configure(background="#d9d9d9")
        self.Button_outdir_from_list.configure(compound='left')
        self.Button_outdir_from_list.configure(disabledforeground="#a3a3a3")
        self.Button_outdir_from_list.configure(font="-family {Segoe UI} -size 9")
        self.Button_outdir_from_list.configure(foreground="black")
        self.Button_outdir_from_list.configure(highlightbackground="#d9d9d9")
        self.Button_outdir_from_list.configure(highlightcolor="black")
        self.Button_outdir_from_list.configure(pady="0")
        self.Button_outdir_from_list.configure(text='''from list''')
        self.Button_outdir_from_list_tooltip = \
        ToolTip(self.Button_outdir_from_list, '''select dir from list''')

        self.Label_select_indir = tk.Label(self.top)
        self.Label_select_indir.place(relx=0.394, rely=0.033, height=22
                , width=192)
        self.Label_select_indir.configure(activebackground="#f9f9f9")
        self.Label_select_indir.configure(activeforeground="black")
        self.Label_select_indir.configure(anchor='w')
        self.Label_select_indir.configure(background="#d9d9d9")
        self.Label_select_indir.configure(compound='left')
        self.Label_select_indir.configure(disabledforeground="#a3a3a3")
        self.Label_select_indir.configure(font="-family {Segoe UI} -size 9")
        self.Label_select_indir.configure(foreground="black")
        self.Label_select_indir.configure(highlightbackground="#d9d9d9")
        self.Label_select_indir.configure(highlightcolor="black")
        self.Label_select_indir.configure(text='''select indir''')

        self.Label_select_outdir = tk.Label(self.top)
        self.Label_select_outdir.place(relx=0.74, rely=0.033, height=22
                , width=174)
        self.Label_select_outdir.configure(activebackground="#f9f9f9")
        self.Label_select_outdir.configure(activeforeground="black")
        self.Label_select_outdir.configure(anchor='w')
        self.Label_select_outdir.configure(background="#d9d9d9")
        self.Label_select_outdir.configure(compound='left')
        self.Label_select_outdir.configure(disabledforeground="#a3a3a3")
        self.Label_select_outdir.configure(font="-family {Segoe UI} -size 9")
        self.Label_select_outdir.configure(foreground="black")
        self.Label_select_outdir.configure(highlightbackground="#d9d9d9")
        self.Label_select_outdir.configure(highlightcolor="black")
        self.Label_select_outdir.configure(text='''select outdir''')

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.29, rely=0.25, relheight=0.423, relwidth=0.692)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.Text1 = tk.Text(self.Frame1)
        self.Text1.place(relx=0.0, rely=0.0, relheight=0.974, relwidth=0.989)
        self.Text1.configure(background="white")
        self.Text1.configure(exportselection="0")
        self.Text1.configure(font="-family {Lucida Console} -size 11")
        self.Text1.configure(foreground="black")
        self.Text1.configure(highlightbackground="#d9d9d9")
        self.Text1.configure(highlightcolor="black")
        self.Text1.configure(insertbackground="black")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(selectforeground="black")
        self.Text1.configure(wrap="word")

        self.Frame_camera = tk.Frame(self.top)
        self.Frame_camera.place(relx=0.028, rely=0.13, relheight=0.201
                , relwidth=0.228)
        self.Frame_camera.configure(relief='flat')
        self.Frame_camera.configure(borderwidth="2")
        self.Frame_camera.configure(background="#d9d9d9")
        self.Frame_camera.configure(highlightbackground="#d9d9d9")
        self.Frame_camera.configure(highlightcolor="black")

        self.Listbox_camera = tk.Listbox(self.Frame_camera)
        self.Listbox_camera.place(relx=0.0, rely=0.0, relheight=0.973
                , relwidth=0.97)
        self.Listbox_camera.configure(background="white")
        self.Listbox_camera.configure(disabledforeground="#a3a3a3")
        self.Listbox_camera.configure(exportselection="0")
        self.Listbox_camera.configure(font="TkFixedFont")
        self.Listbox_camera.configure(foreground="black")
        self.Listbox_camera.configure(highlightbackground="#d9d9d9")
        self.Listbox_camera.configure(highlightcolor="black")
        self.Listbox_camera.configure(selectbackground="#d9d9d9")
        self.Listbox_camera.configure(selectforeground="black")
        self.Listbox_camera.configure(selectmode='single')
        self.Listbox_camera_tooltip = \
        ToolTip(self.Listbox_camera, '''choose camera''')

        self.Canvas1 = tk.Canvas(self.top)
        self.Canvas1.place(relx=0.014, rely=0.717, relheight=0.243
                , relwidth=0.973)
        self.Canvas1.configure(background="#d9d9d9")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(highlightbackground="#d9d9d9")
        self.Canvas1.configure(highlightcolor="black")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief="ridge")
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")

class Toplevel2:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("1200x600+69+70")
        top.minsize(120, 1)
        top.maxsize(2564, 1421)
        top.resizable(1,  1)
        top.title("Image")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Canvas_image = tk.Canvas(self.top)
        self.Canvas_image.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=0.75)

        self.Canvas_image.configure(background="#d9d9d9")
        self.Canvas_image.configure(borderwidth="2")
        self.Canvas_image.configure(highlightbackground="#d9d9d9")
        self.Canvas_image.configure(highlightcolor="black")
        self.Canvas_image.configure(insertbackground="black")
        self.Canvas_image.configure(relief="ridge")
        self.Canvas_image.configure(selectbackground="#c4c4c4")
        self.Canvas_image.configure(selectforeground="black")

        self.Button_fit = tk.Button(self.top)
        self.Button_fit.place(relx=0.783, rely=0.133, height=34, width=87)
        self.Button_fit.configure(activebackground="beige")
        self.Button_fit.configure(activeforeground="black")
        self.Button_fit.configure(background="#d9d9d9")
        self.Button_fit.configure(compound='left')
        self.Button_fit.configure(disabledforeground="#a3a3a3")
        self.Button_fit.configure(font="-family {Segoe UI} -size 9")
        self.Button_fit.configure(foreground="black")
        self.Button_fit.configure(highlightbackground="#d9d9d9")
        self.Button_fit.configure(highlightcolor="black")
        self.Button_fit.configure(pady="0")
        self.Button_fit.configure(text='''Fit canvas''')
        self.Button_fit_tooltip = \
        ToolTip(self.Button_fit, '''Zoom in / out''')

        self.Button_fscale = tk.Button(self.top)
        self.Button_fscale.place(relx=0.883, rely=0.133, height=34, width=87)
        self.Button_fscale.configure(activebackground="beige")
        self.Button_fscale.configure(activeforeground="black")
        self.Button_fscale.configure(background="#d9d9d9")
        self.Button_fscale.configure(compound='left')
        self.Button_fscale.configure(disabledforeground="#a3a3a3")
        self.Button_fscale.configure(font="-family {Segoe UI} -size 9")
        self.Button_fscale.configure(foreground="black")
        self.Button_fscale.configure(highlightbackground="#d9d9d9")
        self.Button_fscale.configure(highlightcolor="black")
        self.Button_fscale.configure(pady="0")
        self.Button_fscale.configure(text='''Full scale''')
        self.Button_fscale_tooltip = \
        ToolTip(self.Button_fscale, '''full resolution''')

        self.Button_exclude = tk.Button(self.top)
        self.Button_exclude.place(relx=0.783, rely=0.233, height=34, width=87)
        self.Button_exclude.configure(activebackground="beige")
        self.Button_exclude.configure(activeforeground="black")
        self.Button_exclude.configure(background="#d9d9d9")
        self.Button_exclude.configure(compound='left')
        self.Button_exclude.configure(disabledforeground="#a3a3a3")
        self.Button_exclude.configure(font="-family {Segoe UI} -size 9")
        self.Button_exclude.configure(foreground="black")
        self.Button_exclude.configure(highlightbackground="#d9d9d9")
        self.Button_exclude.configure(highlightcolor="black")
        self.Button_exclude.configure(pady="0")
        self.Button_exclude.configure(text='''Exclude''')
        self.Button_exclude_tooltip = \
        ToolTip(self.Button_exclude, '''include / exclude''')

        self.Label_status = tk.Label(self.top)
        self.Label_status.place(relx=0.875, rely=0.217, height=41, width=104)
        self.Label_status.configure(activebackground="#f9f9f9")
        self.Label_status.configure(activeforeground="black")
        self.Label_status.configure(anchor='w')
        self.Label_status.configure(background="#d9d9d9")
        self.Label_status.configure(compound='left')
        self.Label_status.configure(disabledforeground="#a3a3a3")
        self.Label_status.configure(font="-family {Segoe UI} -size 9")
        self.Label_status.configure(foreground="black")
        self.Label_status.configure(highlightbackground="#d9d9d9")
        self.Label_status.configure(highlightcolor="black")
        self.Label_status.configure(text='''Label''')

        self.Button_pp = tk.Button(self.top)
        self.Button_pp.place(relx=0.783, rely=0.333, height=24, width=87)
        self.Button_pp.configure(activebackground="beige")
        self.Button_pp.configure(activeforeground="black")
        self.Button_pp.configure(background="#d9d9d9")
        self.Button_pp.configure(compound='left')
        self.Button_pp.configure(disabledforeground="#a3a3a3")
        self.Button_pp.configure(font="-family {Segoe UI} -size 9")
        self.Button_pp.configure(foreground="black")
        self.Button_pp.configure(highlightbackground="#d9d9d9")
        self.Button_pp.configure(highlightcolor="black")
        self.Button_pp.configure(pady="0")
        self.Button_pp.configure(text='''play / pause''')

        self.Button_restart = tk.Button(self.top)
        self.Button_restart.place(relx=0.883, rely=0.333, height=24, width=87)
        self.Button_restart.configure(activebackground="beige")
        self.Button_restart.configure(activeforeground="black")
        self.Button_restart.configure(background="#d9d9d9")
        self.Button_restart.configure(compound='left')
        self.Button_restart.configure(disabledforeground="#a3a3a3")
        self.Button_restart.configure(font="-family {Segoe UI} -size 9")
        self.Button_restart.configure(foreground="black")
        self.Button_restart.configure(highlightbackground="#d9d9d9")
        self.Button_restart.configure(highlightcolor="black")
        self.Button_restart.configure(pady="0")
        self.Button_restart.configure(text='''Restart''')
        self.Button_restart_tooltip = \
        ToolTip(self.Button_restart, '''restart video from begin''')

        self.Scale_fps =  tk.Scale(self.top, from_=1.0, to=200.0, resolution=1.0)
        self.Scale_fps.place(relx=0.767, rely=0.417, relheight=0.327
                , relwidth=0.038)
        self.Scale_fps.configure(activebackground="beige")
        self.Scale_fps.configure(background="#d9d9d9")
        self.Scale_fps.configure(font="-family {Segoe UI} -size 9")
        self.Scale_fps.configure(foreground="black")
        self.Scale_fps.configure(highlightbackground="#d9d9d9")
        self.Scale_fps.configure(highlightcolor="black")
        self.Scale_fps.configure(label="fps")
        self.Scale_fps.configure(length="196")
        self.Scale_fps.configure(troughcolor="#d9d9d9")
        self.Scale_fps_tooltip = \
        ToolTip(self.Scale_fps, '''fps''')

        self.Label_fps = tk.Label(self.top)
        self.Label_fps.place(relx=0.775, rely=0.75, height=21, width=114)
        self.Label_fps.configure(activebackground="#f9f9f9")
        self.Label_fps.configure(activeforeground="black")
        self.Label_fps.configure(anchor='w')
        self.Label_fps.configure(background="#d9d9d9")
        self.Label_fps.configure(compound='left')
        self.Label_fps.configure(disabledforeground="#a3a3a3")
        self.Label_fps.configure(font="-family {Segoe UI} -size 9")
        self.Label_fps.configure(foreground="black")
        self.Label_fps.configure(highlightbackground="#d9d9d9")
        self.Label_fps.configure(highlightcolor="black")
        self.Label_fps.configure(text='''Frames per second''')

class Toplevel_dupl:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("1064x514+93+103")
        top.minsize(120, 1)
        top.maxsize(1444, 881)
        top.resizable(1,  1)
        top.title("Duplicates")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Canvas_dupl = tk.Canvas(self.top)
        self.Canvas_dupl.place(relx=0.019, rely=0.506, relheight=0.395
                , relwidth=0.963)
        self.Canvas_dupl.configure(background="#d9d9d9")
        self.Canvas_dupl.configure(borderwidth="2")
        self.Canvas_dupl.configure(highlightbackground="#d9d9d9")
        self.Canvas_dupl.configure(highlightcolor="black")
        self.Canvas_dupl.configure(insertbackground="black")
        self.Canvas_dupl.configure(relief="ridge")
        self.Canvas_dupl.configure(selectbackground="#c4c4c4")
        self.Canvas_dupl.configure(selectforeground="black")

        self.Listbox_dupl = tk.Listbox(self.top)
        self.Listbox_dupl.place(relx=0.028, rely=0.039, relheight=0.412
                , relwidth=0.568)
        self.Listbox_dupl.configure(background="white")
        self.Listbox_dupl.configure(disabledforeground="#a3a3a3")
        self.Listbox_dupl.configure(font="TkFixedFont")
        self.Listbox_dupl.configure(foreground="black")
        self.Listbox_dupl.configure(highlightbackground="#d9d9d9")
        self.Listbox_dupl.configure(highlightcolor="black")
        self.Listbox_dupl.configure(selectbackground="#c4c4c4")
        self.Listbox_dupl.configure(selectforeground="black")

        self.Button_dupl = tk.Button(self.top)
        self.Button_dupl.place(relx=0.63, rely=0.195, height=44, width=137)
        self.Button_dupl.configure(activebackground="beige")
        self.Button_dupl.configure(activeforeground="black")
        self.Button_dupl.configure(background="#d9d9d9")
        self.Button_dupl.configure(compound='left')
        self.Button_dupl.configure(disabledforeground="#a3a3a3")
        self.Button_dupl.configure(font="-family {Segoe UI} -size 9")
        self.Button_dupl.configure(foreground="black")
        self.Button_dupl.configure(highlightbackground="#d9d9d9")
        self.Button_dupl.configure(highlightcolor="black")
        self.Button_dupl.configure(pady="0")
        self.Button_dupl.configure(text='''Select Duplicate''')

class Toplevel_camera:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("1215x695+120+78")
        top.minsize(120, 1)
        top.maxsize(2564, 1421)
        top.resizable(1,  1)
        top.title("Toplevel _camera")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Frame_camera_name = tk.Frame(self.top)
        self.Frame_camera_name.place(relx=0.025, rely=0.101, relheight=0.501
                , relwidth=0.3)
        self.Frame_camera_name.configure(background="#d9d9d9")
        self.Frame_camera_name.configure(highlightbackground="#d9d9d9")
        self.Frame_camera_name.configure(highlightcolor="black")

        self.Listbox_camera_name = tk.Listbox(self.Frame_camera_name)
        self.Listbox_camera_name.place(relx=0.0, rely=0.0, relheight=0.974
                , relwidth=0.975)
        self.Listbox_camera_name.configure(background="white")
        self.Listbox_camera_name.configure(disabledforeground="#a3a3a3")
        self.Listbox_camera_name.configure(exportselection="0")
        self.Listbox_camera_name.configure(font="TkFixedFont")
        self.Listbox_camera_name.configure(foreground="black")
        self.Listbox_camera_name.configure(highlightbackground="#d9d9d9")
        self.Listbox_camera_name.configure(highlightcolor="black")
        self.Listbox_camera_name.configure(selectbackground="#c4c4c4")
        self.Listbox_camera_name.configure(selectforeground="black")
        self.Listbox_camera_name.configure(selectmode='single')
        self.Listbox_camera_name_tooltip = \
        ToolTip(self.Listbox_camera_name, '''Camera Name''')

        self.Frame_camera_type = tk.Frame(self.top)
        self.Frame_camera_type.place(relx=0.35, rely=0.101, relheight=0.501
                , relwidth=0.3)
        self.Frame_camera_type.configure(background="#d9d9d9")
        self.Frame_camera_type.configure(highlightbackground="#d9d9d9")
        self.Frame_camera_type.configure(highlightcolor="black")

        self.Listbox_camera_type = tk.Listbox(self.Frame_camera_type)
        self.Listbox_camera_type.place(relx=0.0, rely=0.0, relheight=0.974
                , relwidth=0.975)
        self.Listbox_camera_type.configure(background="white")
        self.Listbox_camera_type.configure(disabledforeground="#a3a3a3")
        self.Listbox_camera_type.configure(exportselection="0")
        self.Listbox_camera_type.configure(font="TkFixedFont")
        self.Listbox_camera_type.configure(foreground="black")
        self.Listbox_camera_type.configure(highlightbackground="#d9d9d9")
        self.Listbox_camera_type.configure(highlightcolor="black")
        self.Listbox_camera_type.configure(selectbackground="#c4c4c4")
        self.Listbox_camera_type.configure(selectforeground="black")
        self.Listbox_camera_type.configure(selectmode='single')
        self.Listbox_camera_type_tooltip = \
        ToolTip(self.Listbox_camera_type, '''Camera Image Type''')

        self.Frame_camera_suffix = tk.Frame(self.top)
        self.Frame_camera_suffix.place(relx=0.675, rely=0.101, relheight=0.499
                , relwidth=0.3)
        self.Frame_camera_suffix.configure(background="#d9d9d9")
        self.Frame_camera_suffix.configure(highlightbackground="#d9d9d9")
        self.Frame_camera_suffix.configure(highlightcolor="black")

        self.Listbox_camera_suffix = tk.Listbox(self.Frame_camera_suffix)
        self.Listbox_camera_suffix.place(relx=0.0, rely=0.0, relheight=0.974
                , relwidth=0.975)
        self.Listbox_camera_suffix.configure(background="white")
        self.Listbox_camera_suffix.configure(disabledforeground="#a3a3a3")
        self.Listbox_camera_suffix.configure(exportselection="0")
        self.Listbox_camera_suffix.configure(font="TkFixedFont")
        self.Listbox_camera_suffix.configure(foreground="black")
        self.Listbox_camera_suffix.configure(highlightbackground="#d9d9d9")
        self.Listbox_camera_suffix.configure(highlightcolor="black")
        self.Listbox_camera_suffix.configure(selectbackground="#c4c4c4")
        self.Listbox_camera_suffix.configure(selectforeground="black")
        self.Listbox_camera_suffix.configure(selectmode='single')
        self.Listbox_camera_suffix_tooltip = \
        ToolTip(self.Listbox_camera_suffix, '''Camera File Suffix''')

        self.Entry_camera_name = tk.Entry(self.top)
        self.Entry_camera_name.place(relx=0.025, rely=0.024, height=40
                , relwidth=0.3)
        self.Entry_camera_name.configure(background="white")
        self.Entry_camera_name.configure(disabledforeground="#a3a3a3")
        self.Entry_camera_name.configure(font="-family {Courier New} -size 10")
        self.Entry_camera_name.configure(foreground="black")
        self.Entry_camera_name.configure(highlightbackground="#d9d9d9")
        self.Entry_camera_name.configure(highlightcolor="black")
        self.Entry_camera_name.configure(insertbackground="black")
        self.Entry_camera_name.configure(selectbackground="#c4c4c4")
        self.Entry_camera_name.configure(selectforeground="black")
        self.Entry_camera_name_tooltip = \
        ToolTip(self.Entry_camera_name, '''Enter new Camera Name''')

        self.Entry_camera_type = tk.Entry(self.top)
        self.Entry_camera_type.place(relx=0.35, rely=0.024, height=40
                , relwidth=0.3)
        self.Entry_camera_type.configure(background="white")
        self.Entry_camera_type.configure(disabledforeground="#a3a3a3")
        self.Entry_camera_type.configure(font="-family {Courier New} -size 10")
        self.Entry_camera_type.configure(foreground="black")
        self.Entry_camera_type.configure(highlightbackground="#d9d9d9")
        self.Entry_camera_type.configure(highlightcolor="black")
        self.Entry_camera_type.configure(insertbackground="black")
        self.Entry_camera_type.configure(selectbackground="#c4c4c4")
        self.Entry_camera_type.configure(selectforeground="black")
        self.Entry_camera_type_tooltip = \
        ToolTip(self.Entry_camera_type, '''Enter new image type''')

        self.Entrycamera_suffix = tk.Entry(self.top)
        self.Entrycamera_suffix.place(relx=0.675, rely=0.024, height=40
                , relwidth=0.3)
        self.Entrycamera_suffix.configure(background="white")
        self.Entrycamera_suffix.configure(disabledforeground="#a3a3a3")
        self.Entrycamera_suffix.configure(font="-family {Courier New} -size 10")
        self.Entrycamera_suffix.configure(foreground="black")
        self.Entrycamera_suffix.configure(highlightbackground="#d9d9d9")
        self.Entrycamera_suffix.configure(highlightcolor="black")
        self.Entrycamera_suffix.configure(insertbackground="black")
        self.Entrycamera_suffix.configure(selectbackground="#c4c4c4")
        self.Entrycamera_suffix.configure(selectforeground="black")
        self.Entrycamera_suffix_tooltip = \
        ToolTip(self.Entrycamera_suffix, '''Enter new Image Type Suffix''')

class Toplevel_messages:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("1342x740+60+52")
        top.minsize(120, 1)
        top.maxsize(2564, 1421)
        top.resizable(1,  1)
        top.title("Toplevel 4")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.cb_delrelpath_var = tk.IntVar()
        self.selectedButton = tk.IntVar()

        self.Frame_messages = tk.Frame(self.top)
        self.Frame_messages.place(relx=0.262, rely=0.014, relheight=0.801
                , relwidth=0.48)
        self.Frame_messages.configure(relief='groove')
        self.Frame_messages.configure(borderwidth="2")
        self.Frame_messages.configure(relief="groove")
        self.Frame_messages.configure(background="#d9d9d9")
        self.Frame_messages.configure(highlightbackground="#d9d9d9")
        self.Frame_messages.configure(highlightcolor="black")

        self.Text_messages = tk.Text(self.Frame_messages)
        self.Text_messages.place(relx=0.0, rely=0.0, relheight=0.98
                , relwidth=0.98)
        self.Text_messages.configure(background="white")
        self.Text_messages.configure(font="TkTextFont")
        self.Text_messages.configure(foreground="black")
        self.Text_messages.configure(highlightbackground="#d9d9d9")
        self.Text_messages.configure(highlightcolor="black")
        self.Text_messages.configure(insertbackground="black")
        self.Text_messages.configure(selectbackground="#c4c4c4")
        self.Text_messages.configure(selectforeground="black")
        self.Text_messages.configure(wrap="none")

        self.Frame_errors = tk.Frame(self.top)
        self.Frame_errors.place(relx=0.745, rely=0.014, relheight=0.8
                , relwidth=0.25)
        self.Frame_errors.configure(relief='groove')
        self.Frame_errors.configure(borderwidth="2")
        self.Frame_errors.configure(relief="groove")
        self.Frame_errors.configure(background="#d9d9d9")
        self.Frame_errors.configure(highlightbackground="#d9d9d9")
        self.Frame_errors.configure(highlightcolor="black")

        self.Text_errors = tk.Text(self.Frame_errors)
        self.Text_errors.place(relx=0.0, rely=0.0, relheight=0.98
                , relwidth=0.961)
        self.Text_errors.configure(background="white")
        self.Text_errors.configure(font="TkTextFont")
        self.Text_errors.configure(foreground="black")
        self.Text_errors.configure(highlightbackground="#d9d9d9")
        self.Text_errors.configure(highlightcolor="black")
        self.Text_errors.configure(insertbackground="black")
        self.Text_errors.configure(selectbackground="#c4c4c4")
        self.Text_errors.configure(selectforeground="black")
        self.Text_errors.configure(wrap="none")

        self.Button_execute = tk.Button(self.top)
        self.Button_execute.place(relx=0.179, rely=0.919, height=34, width=77)
        self.Button_execute.configure(activebackground="beige")
        self.Button_execute.configure(activeforeground="black")
        self.Button_execute.configure(background="#d9d9d9")
        self.Button_execute.configure(compound='left')
        self.Button_execute.configure(disabledforeground="#a3a3a3")
        self.Button_execute.configure(font="-family {Segoe UI} -size 9")
        self.Button_execute.configure(foreground="black")
        self.Button_execute.configure(highlightbackground="#d9d9d9")
        self.Button_execute.configure(highlightcolor="black")
        self.Button_execute.configure(pady="0")
        self.Button_execute.configure(text='''copy''')
        self.Button_execute_tooltip = \
        ToolTip(self.Button_execute, '''execute command''')

        self.Checkbutton_delrelpath = tk.Checkbutton(self.top)
        self.Checkbutton_delrelpath.place(relx=0.246, rely=0.919, relheight=0.046
                , relwidth=0.124)
        self.Checkbutton_delrelpath.configure(activebackground="beige")
        self.Checkbutton_delrelpath.configure(activeforeground="black")
        self.Checkbutton_delrelpath.configure(anchor='w')
        self.Checkbutton_delrelpath.configure(background="#d9d9d9")
        self.Checkbutton_delrelpath.configure(compound='left')
        self.Checkbutton_delrelpath.configure(disabledforeground="#a3a3a3")
        self.Checkbutton_delrelpath.configure(font="-family {Segoe UI} -size 9")
        self.Checkbutton_delrelpath.configure(foreground="black")
        self.Checkbutton_delrelpath.configure(highlightbackground="#d9d9d9")
        self.Checkbutton_delrelpath.configure(highlightcolor="black")
        self.Checkbutton_delrelpath.configure(justify='left')
        self.Checkbutton_delrelpath.configure(selectcolor="#d9d9d9")
        self.Checkbutton_delrelpath.configure(text='''delrelpath''')
        self.Checkbutton_delrelpath.configure(variable=self.cb_delrelpath_var)
        self.Checkbutton_delrelpath_tooltip = \
        ToolTip(self.Checkbutton_delrelpath, '''delete copied subdirs''')

        self.Frame_script = tk.Frame(self.top)
        self.Frame_script.place(relx=0.007, rely=0.014, relheight=0.8
                , relwidth=0.25)
        self.Frame_script.configure(relief='groove')
        self.Frame_script.configure(borderwidth="2")
        self.Frame_script.configure(relief="groove")
        self.Frame_script.configure(background="#d9d9d9")
        self.Frame_script.configure(highlightbackground="#d9d9d9")
        self.Frame_script.configure(highlightcolor="black")

        self.Text_script = tk.Text(self.Frame_script)
        self.Text_script.place(relx=0.0, rely=0.0, relheight=0.98
                , relwidth=0.961)
        self.Text_script.configure(background="white")
        self.Text_script.configure(font="TkTextFont")
        self.Text_script.configure(foreground="black")
        self.Text_script.configure(highlightbackground="#d9d9d9")
        self.Text_script.configure(highlightcolor="black")
        self.Text_script.configure(insertbackground="black")
        self.Text_script.configure(selectbackground="#c4c4c4")
        self.Text_script.configure(selectforeground="black")
        self.Text_script.configure(wrap="none")

        self.Radiobutton_copyscript = tk.Radiobutton(self.top)
        self.Radiobutton_copyscript.place(relx=0.015, rely=0.85, relheight=0.047
                , relwidth=0.095)
        self.Radiobutton_copyscript.configure(activebackground="beige")
        self.Radiobutton_copyscript.configure(activeforeground="black")
        self.Radiobutton_copyscript.configure(anchor='w')
        self.Radiobutton_copyscript.configure(background="#d9d9d9")
        self.Radiobutton_copyscript.configure(compound='left')
        self.Radiobutton_copyscript.configure(disabledforeground="#a3a3a3")
        self.Radiobutton_copyscript.configure(font="-family {Segoe UI} -size 9")
        self.Radiobutton_copyscript.configure(foreground="black")
        self.Radiobutton_copyscript.configure(highlightbackground="#d9d9d9")
        self.Radiobutton_copyscript.configure(highlightcolor="black")
        self.Radiobutton_copyscript.configure(justify='left')
        self.Radiobutton_copyscript.configure(selectcolor="#d9d9d9")
        self.Radiobutton_copyscript.configure(text='''copyscript''')
        self.Radiobutton_copyscript.configure(variable=self.selectedButton)

        self.Radiobutton_deletescript = tk.Radiobutton(self.top)
        self.Radiobutton_deletescript.place(relx=0.015, rely=0.891
                , relheight=0.035, relwidth=0.086)
        self.Radiobutton_deletescript.configure(activebackground="beige")
        self.Radiobutton_deletescript.configure(activeforeground="black")
        self.Radiobutton_deletescript.configure(anchor='w')
        self.Radiobutton_deletescript.configure(background="#d9d9d9")
        self.Radiobutton_deletescript.configure(compound='left')
        self.Radiobutton_deletescript.configure(disabledforeground="#a3a3a3")
        self.Radiobutton_deletescript.configure(font="-family {Segoe UI} -size 9")
        self.Radiobutton_deletescript.configure(foreground="black")
        self.Radiobutton_deletescript.configure(highlightbackground="#d9d9d9")
        self.Radiobutton_deletescript.configure(highlightcolor="black")
        self.Radiobutton_deletescript.configure(justify='left')
        self.Radiobutton_deletescript.configure(selectcolor="#d9d9d9")
        self.Radiobutton_deletescript.configure(text='''deletescript''')
        self.Radiobutton_deletescript.configure(variable=self.selectedButton)

        self.Radiobutton_delrelpathscript = tk.Radiobutton(self.top)
        self.Radiobutton_delrelpathscript.place(relx=0.015, rely=0.93
                , relheight=0.034, relwidth=0.146)
        self.Radiobutton_delrelpathscript.configure(activebackground="beige")
        self.Radiobutton_delrelpathscript.configure(activeforeground="black")
        self.Radiobutton_delrelpathscript.configure(anchor='w')
        self.Radiobutton_delrelpathscript.configure(background="#d9d9d9")
        self.Radiobutton_delrelpathscript.configure(compound='left')
        self.Radiobutton_delrelpathscript.configure(disabledforeground="#a3a3a3")
        self.Radiobutton_delrelpathscript.configure(font="-family {Segoe UI} -size 9")
        self.Radiobutton_delrelpathscript.configure(foreground="black")
        self.Radiobutton_delrelpathscript.configure(highlightbackground="#d9d9d9")
        self.Radiobutton_delrelpathscript.configure(highlightcolor="black")
        self.Radiobutton_delrelpathscript.configure(justify='left')
        self.Radiobutton_delrelpathscript.configure(selectcolor="#d9d9d9")
        self.Radiobutton_delrelpathscript.configure(text='''delrelpathscript (view only)''')
        self.Radiobutton_delrelpathscript.configure(variable=self.selectedButton)

        self.Label_script = tk.Label(self.top)
        self.Label_script.place(relx=0.44, rely=0.878, height=60, width=583)
        self.Label_script.configure(activebackground="#f9f9f9")
        self.Label_script.configure(activeforeground="black")
        self.Label_script.configure(anchor='w')
        self.Label_script.configure(background="#d9d9d9")
        self.Label_script.configure(compound='left')
        self.Label_script.configure(disabledforeground="#a3a3a3")
        self.Label_script.configure(font="-family {Segoe UI} -size 9")
        self.Label_script.configure(foreground="black")
        self.Label_script.configure(highlightbackground="#d9d9d9")
        self.Label_script.configure(highlightcolor="black")
        self.Label_script.configure(justify='left')
        self.Label_script.configure(text='''Label''')
        self.Label_script.configure(wraplength="500")

        self.Label_messages = tk.Label(self.top)
        self.Label_messages.place(relx=0.462, rely=0.824, height=20, width=123)
        self.Label_messages.configure(activebackground="#f9f9f9")
        self.Label_messages.configure(activeforeground="black")
        self.Label_messages.configure(anchor='w')
        self.Label_messages.configure(background="#d9d9d9")
        self.Label_messages.configure(compound='left')
        self.Label_messages.configure(disabledforeground="#a3a3a3")
        self.Label_messages.configure(font="-family {Segoe UI} -size 9")
        self.Label_messages.configure(foreground="black")
        self.Label_messages.configure(highlightbackground="#d9d9d9")
        self.Label_messages.configure(highlightcolor="black")
        self.Label_messages.configure(text='''Messages''')

        self.Label_errors = tk.Label(self.top)
        self.Label_errors.place(relx=0.835, rely=0.824, height=20, width=102)
        self.Label_errors.configure(activebackground="#f9f9f9")
        self.Label_errors.configure(activeforeground="black")
        self.Label_errors.configure(anchor='w')
        self.Label_errors.configure(background="#d9d9d9")
        self.Label_errors.configure(compound='left')
        self.Label_errors.configure(disabledforeground="#a3a3a3")
        self.Label_errors.configure(font="-family {Segoe UI} -size 9")
        self.Label_errors.configure(foreground="black")
        self.Label_errors.configure(highlightbackground="#d9d9d9")
        self.Label_errors.configure(highlightcolor="black")
        self.Label_errors.configure(text='''Errors''')

        self.Label_scripttype = tk.Label(self.top)
        self.Label_scripttype.place(relx=0.052, rely=0.824, height=20, width=202)

        self.Label_scripttype.configure(activebackground="#f9f9f9")
        self.Label_scripttype.configure(activeforeground="black")
        self.Label_scripttype.configure(anchor='w')
        self.Label_scripttype.configure(background="#d9d9d9")
        self.Label_scripttype.configure(compound='left')
        self.Label_scripttype.configure(disabledforeground="#a3a3a3")
        self.Label_scripttype.configure(font="-family {Segoe UI} -size 9")
        self.Label_scripttype.configure(foreground="black")
        self.Label_scripttype.configure(highlightbackground="#d9d9d9")
        self.Label_scripttype.configure(highlightcolor="black")
        self.Label_scripttype.configure(text='''Label''')

class Toplevel_treeview_camera:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("1400x832+22+9")
        top.minsize(120, 1)
        top.maxsize(2564, 1421)
        top.resizable(1,  1)
        top.title("Toplevel 5")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Frame_treeview = tk.Frame(self.top)
        self.Frame_treeview.place(relx=0.014, rely=0.012, relheight=0.956
                , relwidth=0.975)
        self.Frame_treeview.configure(relief='groove')
        self.Frame_treeview.configure(borderwidth="2")
        self.Frame_treeview.configure(relief="groove")
        self.Frame_treeview.configure(background="#d9d9d9")
        self.Frame_treeview.configure(highlightbackground="#d9d9d9")
        self.Frame_treeview.configure(highlightcolor="black")

        _style_code()
        self.Scrolledtreeview_camera = ScrolledTreeView(self.Frame_treeview)
        self.Scrolledtreeview_camera.place(relx=0.015, rely=0.026
                , relheight=0.865, relwidth=0.975)
        self.Scrolledtreeview_camera.configure(columns="Col1, Col2, Col3")
        # build_treeview_support starting.
        self.Scrolledtreeview_camera.heading("#0",text="Tree")
        self.Scrolledtreeview_camera.heading("#0",anchor="center")
        self.Scrolledtreeview_camera.column("#0",width="643")
        self.Scrolledtreeview_camera.column("#0",minwidth="20")
        self.Scrolledtreeview_camera.column("#0",stretch="1")
        self.Scrolledtreeview_camera.column("#0",anchor="w")
        self.Scrolledtreeview_camera.heading("Col1,",anchor="center")
        self.Scrolledtreeview_camera.column("Col1,",width="222")
        self.Scrolledtreeview_camera.column("Col1,",minwidth="20")
        self.Scrolledtreeview_camera.column("Col1,",stretch="1")
        self.Scrolledtreeview_camera.column("Col1,",anchor="w")
        self.Scrolledtreeview_camera.heading("Col2,",anchor="center")
        self.Scrolledtreeview_camera.column("Col2,",width="223")
        self.Scrolledtreeview_camera.column("Col2,",minwidth="20")
        self.Scrolledtreeview_camera.column("Col2,",stretch="1")
        self.Scrolledtreeview_camera.column("Col2,",anchor="w")
        self.Scrolledtreeview_camera.heading("Col3",anchor="center")
        self.Scrolledtreeview_camera.column("Col3",width="223")
        self.Scrolledtreeview_camera.column("Col3",minwidth="20")
        self.Scrolledtreeview_camera.column("Col3",stretch="1")
        self.Scrolledtreeview_camera.column("Col3",anchor="w")

        self.Entry_camera = tk.Entry(self.Frame_treeview)
        self.Entry_camera.place(relx=0.103, rely=0.906, height=30
                , relwidth=0.135)
        self.Entry_camera.configure(background="white")
        self.Entry_camera.configure(disabledforeground="#a3a3a3")
        self.Entry_camera.configure(font="-family {Courier New} -size 10")
        self.Entry_camera.configure(foreground="black")
        self.Entry_camera.configure(highlightbackground="#d9d9d9")
        self.Entry_camera.configure(highlightcolor="black")
        self.Entry_camera.configure(insertbackground="black")
        self.Entry_camera.configure(selectbackground="#c4c4c4")
        self.Entry_camera.configure(selectforeground="black")
        self.Entry_camera_tooltip = \
        ToolTip(self.Entry_camera, '''Enter new Cameraname''')

        self.Label_camera = tk.Label(self.Frame_treeview)
        self.Label_camera.place(relx=0.103, rely=0.956, height=20, width=173)
        self.Label_camera.configure(activebackground="#f9f9f9")
        self.Label_camera.configure(activeforeground="black")
        self.Label_camera.configure(anchor='w')
        self.Label_camera.configure(background="#d9d9d9")
        self.Label_camera.configure(compound='left')
        self.Label_camera.configure(disabledforeground="#a3a3a3")
        self.Label_camera.configure(font="-family {Segoe UI} -size 9")
        self.Label_camera.configure(foreground="black")
        self.Label_camera.configure(highlightbackground="#d9d9d9")
        self.Label_camera.configure(highlightcolor="black")
        self.Label_camera.configure(text='''Camera''')

        self.Button_apply = tk.Button(self.Frame_treeview)
        self.Button_apply.place(relx=0.791, rely=0.906, height=34, width=107)
        self.Button_apply.configure(activebackground="beige")
        self.Button_apply.configure(activeforeground="black")
        self.Button_apply.configure(background="#d9d9d9")
        self.Button_apply.configure(compound='left')
        self.Button_apply.configure(disabledforeground="#a3a3a3")
        self.Button_apply.configure(font="-family {Segoe UI} -size 9")
        self.Button_apply.configure(foreground="black")
        self.Button_apply.configure(highlightbackground="#d9d9d9")
        self.Button_apply.configure(highlightcolor="black")
        self.Button_apply.configure(pady="0")
        self.Button_apply.configure(text='''Apply''')

        self.Button_camera_new = tk.Button(self.Frame_treeview)
        self.Button_camera_new.place(relx=0.015, rely=0.906, height=34, width=97)

        self.Button_camera_new.configure(activebackground="beige")
        self.Button_camera_new.configure(activeforeground="black")
        self.Button_camera_new.configure(background="#d9d9d9")
        self.Button_camera_new.configure(compound='left')
        self.Button_camera_new.configure(disabledforeground="#a3a3a3")
        self.Button_camera_new.configure(font="-family {Segoe UI} -size 9")
        self.Button_camera_new.configure(foreground="black")
        self.Button_camera_new.configure(highlightbackground="#d9d9d9")
        self.Button_camera_new.configure(highlightcolor="black")
        self.Button_camera_new.configure(pady="0")
        self.Button_camera_new.configure(text='''New camera...''')
        self.Button_camera_new_tooltip = \
        ToolTip(self.Button_camera_new, '''create a new camera''')

        self.Entry_type = tk.Entry(self.Frame_treeview)
        self.Entry_type.place(relx=0.249, rely=0.906, height=30, relwidth=0.127)
        self.Entry_type.configure(background="white")
        self.Entry_type.configure(disabledforeground="#a3a3a3")
        self.Entry_type.configure(font="-family {Courier New} -size 10")
        self.Entry_type.configure(foreground="black")
        self.Entry_type.configure(highlightbackground="#d9d9d9")
        self.Entry_type.configure(highlightcolor="black")
        self.Entry_type.configure(insertbackground="black")
        self.Entry_type.configure(selectbackground="#c4c4c4")
        self.Entry_type.configure(selectforeground="black")
        self.Entry_type_tooltip = \
        ToolTip(self.Entry_type, '''Enter new type''')

        self.Entry_suffix = tk.Entry(self.Frame_treeview)
        self.Entry_suffix.place(relx=0.388, rely=0.906, height=30
                , relwidth=0.135)
        self.Entry_suffix.configure(background="white")
        self.Entry_suffix.configure(disabledforeground="#a3a3a3")
        self.Entry_suffix.configure(font="-family {Courier New} -size 10")
        self.Entry_suffix.configure(foreground="black")
        self.Entry_suffix.configure(highlightbackground="#d9d9d9")
        self.Entry_suffix.configure(highlightcolor="black")
        self.Entry_suffix.configure(insertbackground="black")
        self.Entry_suffix.configure(selectbackground="#c4c4c4")
        self.Entry_suffix.configure(selectforeground="black")
        self.Entry_suffix_tooltip = \
        ToolTip(self.Entry_suffix, '''Enter new image file suffix''')

        self.Label_type = tk.Label(self.Frame_treeview)
        self.Label_type.place(relx=0.249, rely=0.956, height=20, width=181)
        self.Label_type.configure(activebackground="#f9f9f9")
        self.Label_type.configure(activeforeground="black")
        self.Label_type.configure(anchor='w')
        self.Label_type.configure(background="#d9d9d9")
        self.Label_type.configure(compound='left')
        self.Label_type.configure(disabledforeground="#a3a3a3")
        self.Label_type.configure(font="-family {Segoe UI} -size 9")
        self.Label_type.configure(foreground="black")
        self.Label_type.configure(highlightbackground="#d9d9d9")
        self.Label_type.configure(highlightcolor="black")
        self.Label_type.configure(text='''Type''')

        self.Label_suffix = tk.Label(self.Frame_treeview)
        self.Label_suffix.place(relx=0.388, rely=0.956, height=21, width=132)
        self.Label_suffix.configure(activebackground="#f9f9f9")
        self.Label_suffix.configure(activeforeground="black")
        self.Label_suffix.configure(anchor='w')
        self.Label_suffix.configure(background="#d9d9d9")
        self.Label_suffix.configure(compound='left')
        self.Label_suffix.configure(disabledforeground="#a3a3a3")
        self.Label_suffix.configure(font="-family {Segoe UI} -size 9")
        self.Label_suffix.configure(foreground="black")
        self.Label_suffix.configure(highlightbackground="#d9d9d9")
        self.Label_suffix.configure(highlightcolor="black")
        self.Label_suffix.configure(text='''Suffix''')

        self.Label_subdir = tk.Label(self.Frame_treeview)
        self.Label_subdir.place(relx=0.535, rely=0.956, height=21, width=156)
        self.Label_subdir.configure(activebackground="#f9f9f9")
        self.Label_subdir.configure(activeforeground="black")
        self.Label_subdir.configure(anchor='w')
        self.Label_subdir.configure(background="#d9d9d9")
        self.Label_subdir.configure(compound='left')
        self.Label_subdir.configure(disabledforeground="#a3a3a3")
        self.Label_subdir.configure(font="-family {Segoe UI} -size 9")
        self.Label_subdir.configure(foreground="black")
        self.Label_subdir.configure(highlightbackground="#d9d9d9")
        self.Label_subdir.configure(highlightcolor="black")
        self.Label_subdir.configure(text='''Subdir''')

        self.Entry_subdir = tk.Entry(self.Frame_treeview)
        self.Entry_subdir.place(relx=0.535, rely=0.906, height=30
                , relwidth=0.252)
        self.Entry_subdir.configure(background="white")
        self.Entry_subdir.configure(disabledforeground="#a3a3a3")
        self.Entry_subdir.configure(font="-family {Courier New} -size 10")
        self.Entry_subdir.configure(foreground="black")
        self.Entry_subdir.configure(highlightbackground="#d9d9d9")
        self.Entry_subdir.configure(highlightcolor="black")
        self.Entry_subdir.configure(insertbackground="black")
        self.Entry_subdir.configure(selectbackground="#c4c4c4")
        self.Entry_subdir.configure(selectforeground="black")
        self.Entry_subdir_tooltip = \
        ToolTip(self.Entry_subdir, '''Enter subdir for type''')

        self.Button_cancel = tk.Button(self.Frame_treeview)
        self.Button_cancel.place(relx=0.872, rely=0.906, height=34, width=87)
        self.Button_cancel.configure(activebackground="beige")
        self.Button_cancel.configure(activeforeground="black")
        self.Button_cancel.configure(background="#d9d9d9")
        self.Button_cancel.configure(compound='left')
        self.Button_cancel.configure(disabledforeground="#a3a3a3")
        self.Button_cancel.configure(font="-family {Segoe UI} -size 9")
        self.Button_cancel.configure(foreground="black")
        self.Button_cancel.configure(highlightbackground="#d9d9d9")
        self.Button_cancel.configure(highlightcolor="black")
        self.Button_cancel.configure(pady="0")
        self.Button_cancel.configure(text='''Cancel''')
        self.Button_cancel_tooltip = \
        ToolTip(self.Button_cancel, '''cancel transaction''')

        self.Button_undo = tk.Button(self.Frame_treeview)
        self.Button_undo.place(relx=0.945, rely=0.906, height=34, width=67)
        self.Button_undo.configure(activebackground="beige")
        self.Button_undo.configure(activeforeground="black")
        self.Button_undo.configure(background="#d9d9d9")
        self.Button_undo.configure(compound='left')
        self.Button_undo.configure(disabledforeground="#a3a3a3")
        self.Button_undo.configure(font="-family {Segoe UI} -size 9")
        self.Button_undo.configure(foreground="black")
        self.Button_undo.configure(highlightbackground="#d9d9d9")
        self.Button_undo.configure(highlightcolor="black")
        self.Button_undo.configure(pady="0")
        self.Button_undo.configure(text='''undo''')
        self.Button_undo_tooltip = \
        ToolTip(self.Button_undo, '''undo apply''')

        self.Button_redo = tk.Button(self.Frame_treeview)
        self.Button_redo.place(relx=0.945, rely=0.956, height=34, width=67)
        self.Button_redo.configure(activebackground="beige")
        self.Button_redo.configure(activeforeground="black")
        self.Button_redo.configure(background="#d9d9d9")
        self.Button_redo.configure(compound='left')
        self.Button_redo.configure(disabledforeground="#a3a3a3")
        self.Button_redo.configure(font="-family {Segoe UI} -size 9")
        self.Button_redo.configure(foreground="black")
        self.Button_redo.configure(highlightbackground="#d9d9d9")
        self.Button_redo.configure(highlightcolor="black")
        self.Button_redo.configure(pady="0")
        self.Button_redo.configure(text='''redo''')
        self.Button_redo_tooltip = \
        ToolTip(self.Button_redo, '''redo apply''')

from time import time, localtime, strftime
class ToolTip(tk.Toplevel):
    """ Provides a ToolTip widget for Tkinter. """
    def __init__(self, wdgt, msg=None, msgFunc=None, delay=0.5,
                 follow=True):
        self.wdgt = wdgt
        self.parent = self.wdgt.master
        tk.Toplevel.__init__(self, self.parent, bg='black', padx=1, pady=1)
        self.withdraw()
        self.overrideredirect(True)
        self.msgVar = tk.StringVar()
        if msg is None:
            self.msgVar.set('No message provided')
        else:
            self.msgVar.set(msg)
        self.msgFunc = msgFunc
        self.delay = delay
        self.follow = follow
        self.visible = 0
        self.lastMotion = 0
        self.msg = tk.Message(self, textvariable=self.msgVar, bg=_bgcolor,
                   fg=_fgcolor, font="TkDefaultFont",
                   aspect=1000)
        self.msg.grid()
        self.wdgt.bind('<Enter>', self.spawn, '+')
        self.wdgt.bind('<Leave>', self.hide, '+')
        self.wdgt.bind('<Motion>', self.move, '+')
    def spawn(self, event=None):
        self.visible = 1
        self.after(int(self.delay * 1000), self.show)
    def show(self):
        if self.visible == 1 and time() - self.lastMotion > self.delay:
            self.visible = 2
        if self.visible == 2:
            self.deiconify()
    def move(self, event):
        self.lastMotion = time()
        if self.follow is False:
            self.withdraw()
            self.visible = 1
        self.geometry('+%i+%i' % (event.x_root + 20, event.y_root - 10))
        try:
            self.msgVar.set(self.msgFunc())
        except:
            pass
        self.after(int(self.delay * 1000), self.show)
    def hide(self, event=None):
        self.visible = 0
        self.withdraw()
    def update(self, msg):
        self.msgVar.set(msg)
    def configure(self, **kwargs):
        backgroundset = False
        foregroundset = False
        # Get the current tooltip text just in case the user doesn't provide any.
        current_text = self.msgVar.get()
        # to clear the tooltip text, use the .update method
        if 'debug' in kwargs.keys():
            debug = kwargs.pop('debug', False)
            if debug:
                for key, value in kwargs.items():
                    print(f'key: {key} - value: {value}')
        if 'background' in kwargs.keys():
            background = kwargs.pop('background')
            backgroundset = True
        if 'bg' in kwargs.keys():
            background = kwargs.pop('bg')
            backgroundset = True
        if 'foreground' in kwargs.keys():
            foreground = kwargs.pop('foreground')
            foregroundset = True
        if 'fg' in kwargs.keys():
            foreground = kwargs.pop('fg')
            foregroundset = True

        fontd = kwargs.pop('font', None)
        if 'text' in kwargs.keys():
            text = kwargs.pop('text')
            if (text == '') or (text == "\n"):
                text = current_text
            else:
                self.msgVar.set(text)
        reliefd = kwargs.pop('relief', 'flat')
        justifyd = kwargs.pop('justify', 'left')
        padxd = kwargs.pop('padx', 1)
        padyd = kwargs.pop('pady', 1)
        borderwidthd = kwargs.pop('borderwidth', 2)
        wid = self.msg      # The message widget which is the actual tooltip
        if backgroundset:
            wid.config(bg=background)
        if foregroundset:
            wid.config(fg=foreground)
        wid.config(font=fontd)
        wid.config(borderwidth=borderwidthd)
        wid.config(relief=reliefd)
        wid.config(justify=justifyd)
        wid.config(padx=padxd)
        wid.config(pady=padyd)
#                   End of Class ToolTip

# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''
    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))
        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')
        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)
        # Copy geometry methods of master  (taken from ScrolledText.py)
        methods = tk.Pack.__dict__.keys() | tk.Grid.__dict__.keys() \
                  | tk.Place.__dict__.keys()
        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        container.bind('<Enter>', lambda e: _bound_to_mousewheel(e, container))
        container.bind('<Leave>', lambda e: _unbound_to_mousewheel(e, container))
        return func(cls, container, **kw)
    return wrapped

class ScrolledTreeView(AutoScroll, ttk.Treeview):
    '''A standard ttk Treeview widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        ttk.Treeview.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

import platform
def _bound_to_mousewheel(event, widget):
    child = widget.winfo_children()[0]
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        child.bind_all('<MouseWheel>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-MouseWheel>', lambda e: _on_shiftmouse(e, child))
    else:
        child.bind_all('<Button-4>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Button-5>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-Button-4>', lambda e: _on_shiftmouse(e, child))
        child.bind_all('<Shift-Button-5>', lambda e: _on_shiftmouse(e, child))

def _unbound_to_mousewheel(event, widget):
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        widget.unbind_all('<MouseWheel>')
        widget.unbind_all('<Shift-MouseWheel>')
    else:
        widget.unbind_all('<Button-4>')
        widget.unbind_all('<Button-5>')
        widget.unbind_all('<Shift-Button-4>')
        widget.unbind_all('<Shift-Button-5>')

def _on_mousewheel(event, widget):
    if platform.system() == 'Windows':
        widget.yview_scroll(-1*int(event.delta/120),'units')
    elif platform.system() == 'Darwin':
        widget.yview_scroll(-1*int(event.delta),'units')
    else:
        if event.num == 4:
            widget.yview_scroll(-1, 'units')
        elif event.num == 5:
            widget.yview_scroll(1, 'units')

def _on_shiftmouse(event, widget):
    if platform.system() == 'Windows':
        widget.xview_scroll(-1*int(event.delta/120), 'units')
    elif platform.system() == 'Darwin':
        widget.xview_scroll(-1*int(event.delta), 'units')
    else:
        if event.num == 4:
            widget.xview_scroll(-1, 'units')
        elif event.num == 5:
            widget.xview_scroll(1, 'units')
def start_up():
    Dateimeister_support.main()

if __name__ == '__main__':
    Dateimeister_support.main()




